<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.blog.dao.BlogDao">

    <resultMap type="Blog" id="BlogResult">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="releaseDate" column="releaseDate"/>
        <result property="clickHit" column="clickHit"/>
        <result property="replyHit" column="replyHit"/>
        <result property="content" column="content"/>
        <result property="keyWord" column="keyWord"/>

        <association property="blogType" column="type_id" select="ssm.blog.dao.BlogTypeDao.getById">
        </association>
    </resultMap>



    <select id="listBlog" parameterType="Map" resultMap="BlogResult">
        SELECT * FROM t_blog
        <where>
            <if test="title!=null and title!=''">
                and title like "%"#{title}"%"
            </if>
            <if test="typeId!=null and typeId!=''">
                and type_id=#{typeId}
            </if>
            <if test="releaseDateStr!=null and releaseDateStr!=''">
                and DATE_FORMAT(releaseDate,'%Y年%m月')=#{releaseDateStr}
            </if>
        </where>
        ORDER BY releaseDate DESC
        <if test="start!=null and end!=null">
            limit #{start},#{end}
        </if>
    </select>
	<!-- 为什么getTotal方法带参数呢，因为我需要实现模糊分页查询的功能的，所以你对应查询记录的总数也要带上参数。其中的 是mybatis提供给我们实现动态sql的工具
		association : 一个复杂的类型关联;许多结果将包成这种类型
		其中property实体类属性 column关联外键类 select给实体类属性初始化的方法 
		因为我们的实体类是BlogType对象 所以我们可以根据type_id的值从BlogTypeDao的getById方法把这条记录查询出来并且赋值给blogType属性 -->

    <select id="getTotal" parameterType="Map" resultType="Long">
        SELECT COUNT(*) FROM t_blog
        <where>
            <if test="title!=null and title!=''">
                and title like "%"#{title}"%"
            </if>
            <if test="typeId!=null and typeId!=''">
                and type_id=#{typeId}
            </if>
            <if test="releaseDateStr!=null and releaseDateStr!=''">
                and DATE_FORMAT(releaseDate,'%Y年%m月')=#{releaseDateStr}
            </if>
        </where>
    </select>


    <select id="getBlogByTypeId" parameterType="Integer" resultType="Integer">
        select count(*) from t_blog where type_id=#{typeId}
    </select>

    <insert id="saveBlog" parameterType="Blog" keyProperty="id" useGeneratedKeys="true">
        insert into t_blog VALUES (NULL ,#{title},#{summary},now(),0,0,#{content},#{keyWord},#{blogType.id})
    </insert>

    <update id="updateBlog" parameterType="Blog">
        update t_blog
        <set>
            <if test="title!=null and title!=''">
                title=#{title},
            </if>
            <if test="summary!=null and summary!=''">
                summary=#{summary},
            </if>
            <if test="content!=null and content!=''">
                content=#{content},
            </if>
            <if test="blogType.id!=null">
                type_id=#{blogType.id},
            </if>
            <if test="clickHit!=null">
                clickHit=#{clickHit},
            </if>
            <if test="replyHit!=null">
                replyHit=#{replyHit},
            </if>
            <if test="keyWord!=null and keyWord!=''">
                keyWord=#{keyWord},
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="deleteBlog" parameterType="java.lang.Integer">
        DELETE FROM t_blog
        where id=#{id}
    </delete>

    <select id="getById" parameterType="java.lang.Integer" resultMap="BlogResult">
        SELECT * from t_blog where id=#{id}
    </select>
</mapper> 